Проект: "Розробка навчального середовища для створення та візуалізації алгоритмів у графічному вигляді"
Автор: Глушко Богдан Сергійович, ліцеїст 10 класу Дніпровського Технічного ліцею м. Києва

/*Опис*/
Не  секретом, що популярність ІТ-професій в наші часи неспинно росте. Проте, протягом десятків років, першою темою, що вивчають новачки-програмісти, є
правила запису алгоритмів та їх зображення у вигляді блок-схем. Дана розробка, що має тестову назву "AlgEs", покликана спростити процес вивчення алгоритмічних структур
та ознайомити користувачів із простою спеціально розробленою мовою програмування. 
Реалізований в проекті контроль ресурсів, що завантажують RAM, а також кросплатформовість дозволяє користуватися середовищем навіть на малопотужних комп'ютерах - 
зокрема, його роботу було перевірено на Raspberry Pi B+. Цей аспект робить процес навчання за допомогою розробленої програми значно доступнішим та "масовішим". 

AlgEs - це навчальна платформа для школярів та всіх бажаючих навчитися програмуванню, що включає в себе графічне середовище 
для розробки та запуску алгоритмів (що також слугує інтерпретатором програмного коду) та власну мову програмування для формального запису алгоритмів - "ColgEs".
Створені алгоритми можна не тільки переглянути у графічному вигляді завдяки генератору блок-схем, що входить у програму, але й запустити прямо в ній, завдяки спеціальному
інтерпретатору.

Середовище написано мовою Java, з використанням графічних бібліотек Swing та AWT. Синтаксис мови програмування ColgEs задається в окремій складовій коду програми,
класі, що також відповідає за інтерпретатор.

/*Інструкція з використання*/
Увага! Для роботи програми необхідний встановлений на комп'ютері JRE (Java Runtime Environment).
AlgEs пропонує користувачу зручний графічний інтерфейс для побудови блок-схем та їх подальшого запуску. 
Вгорі вікна програми користувач може бачити панель керування, на якій розташовані кнопки створення нового проекту ("Новий"), збереження поточного ("Зберегти"), 
завантаження ("Завантажити"), перегляду проміжного коду, генерованого у процесі побудови блок-схеми ("Подивитися код") та інтерпретованого запуску поточного 
проекту ("Запустити").
Справа - "навігатор", що містить кнопки для побудови алгоритму. При цьому, правила аналогічні до загальновстановлених правил побудови блок-схем - 
спершу блок початку, далі ініціалізація змінних, і т.д. 
Зліва розташована робоча область, на яку додаються елементи алгоритму.
Унизу знаходиться консоль, на якій з'являються результати запуску алгоритму або проміжний код.
Як вже було зазначено, у процесі побудови алгоритму генерується спеціальний проміжний код, тож роботу блок-схеми можна побачити на власні очі, просто натиснувши кнопку
"Запустити".

/*мова програмування, "ColgEs"*/
Якщо ж користувач достатньо знає про побудову блок-схем та алгоритмів, замість графічного середовища він може користуватися спеціально розробленою мовою 
програмування. Для цього підходить будь-який текствоий редактор: від звичайного "Блокноту" до орієнтованих на написання коду "Notepad++", "SublimeText", "Atom" 
тощо. Для середовища SublimeText розроблений плагін підсвічування синтаксису (в папці "Плагін")
Варто зазначити, що дана мова програмування - той самий проміжний код, генерований графічним середовищем при побудові алгоритму, тому усі доступні в AlgEs 
функції наявні і тут, у ColgEs. Зокрема, вже зараз доступна строга типізація змінних з поділом на рядкові, логічні та цілочисельні; оператори розгалуження та виводу.

Ось короткий перелік основних правил синтаксису:

AlgS та AlgE є, відповідно, точками входу і виходу з програми, тож ставляться на початку і в кінці.

Нові змінні задаються наступним чином: 
int a 13
str b 'Hello'
bool c 1
Де перше слово - тип змінної, друге - її назва, третє - значення, що їй присвоюється.

wr - команда, що дозволяє вивести певну інформацію в консоль. Для цього після "wr" слід вказати текст в одинарних лапках. або назву змінної:
wr 'Hello World'
wr b 

Процес розгалуження підтримує розбиття на дві гілки: then та else.
Приклад: 
if op a > 12 then
  op a * 5
else
  op a - 5

Наявна підтримка основних арифметичних операторів та операторів порівняння: "+", "-", "/", "*", ">", "<", ">=", "<=", "=" тощо. Для їх використання необхідно попередньо 
вказати команду "op", що "попереджає" інтерпретатор про подальші дії в рамках коду (дивіться приклад вище).
Більше прикладів можна знайти в папці "Приклади". Для запуску програм, написаних на ColgEs, достатньо зберегти файл з кодом у розширенні ".txt", завантажити
його через AlgEs за допомогою кнопки "Завантажити" і натиснути "Запустити".

Більш детальне ознайомлення із розробленою у рамках даного проекту мовою програмування демонструє її схожість за синтаксисом із Python та LUA - адже ключову роль
тут відіграють не дужки, а відступи й табуляції, а повнота мови за Тьюрінгом роблить її легким для вивчення "наступним кроком" після графічного середовища новачкам світу 
програмування. 
Таким чином, користувачу доступний цілий пакет інтсрументів, що складається з графічного середовища ("AlgEs"), мови програмування("ColgEs") та 
інтерпретатора.

Дякую за Вашу увагу!

